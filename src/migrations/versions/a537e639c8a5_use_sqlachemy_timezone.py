"""use sqlachemy timezone

Revision ID: a537e639c8a5
Revises: 016ee7d6b0b9
Create Date: 2025-02-11 22:24:06.834554

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a537e639c8a5'
down_revision: Union[str, None] = '016ee7d6b0b9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_tokenblacklist_token', table_name='tokenblacklist')
    op.drop_table('tokenblacklist')
    # op.create_foreign_key(None, 'post', 'user', ['created_by_user_id'], ['id'])
    op.alter_column('user', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    # op.drop_constraint(None, 'post', type_='foreignkey')
    op.create_table('tokenblacklist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='tokenblacklist_pkey')
    )
    op.create_index('ix_tokenblacklist_token', 'tokenblacklist', ['token'], unique=True)
    # ### end Alembic commands ###
